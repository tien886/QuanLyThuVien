<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">


    <!-- DataGrid as a rounded card -->
    <Style x:Key="RoundedDataGrid" TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource White}"/>
        <Setter Property="Foreground" Value="{StaticResource Black}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Stroke}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="RowHeight" Value="44"/>
        <Setter Property="ColumnHeaderHeight" Value="36"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource Stroke}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource Stroke}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <Border x:Name="Root"
                            CornerRadius="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer"
                                      Focusable="false"
                                      CanContentScroll="true">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0"
                                              x:Name="ColumnHeadersPresenter"
                                              Background="{StaticResource White}"
                                              Margin="0,0,0,4">
                                            <DataGridColumnHeadersPresenter/>
                                        </Grid>
                                        <ScrollContentPresenter Grid.Row="1"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Column header style -->
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="{StaticResource White}"/>
                    <Setter Property="Foreground" Value="{StaticResource Black}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="Padding" Value="8,0"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Stroke}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                </Style>
            </Setter.Value>
        </Setter>

        <!-- Default cell style -->
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="Padding" Value="8,0"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Stroke}"/>
                    <Setter Property="Background" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="{StaticResource Black}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource InUse_light}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <!-- Row style: zebra + hover -->
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Stroke}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Style.Triggers>
                        <Trigger Property="AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{StaticResource Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource InUse_light}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon-only button for 'Actions' column -->
    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
